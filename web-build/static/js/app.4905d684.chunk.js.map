{"version":3,"sources":["components/CategoryCard.js","sanity.js","components/Categories.js","components/RestaurantCard.js","components/FeaturedRow.js","screens/HomeScreen.js","features/basketSlice.js","components/DishRow.js","components/BasketIcon.js","features/restaurantSlice.js","screens/RestaurantScreen.js","store.js","screens/BasketScreen.js","screens/PreparingOrderScreen.js","screens/DeliveryScreen.js","App.js","assets/orderLoading.gif"],"names":["CategoryCard","imgUrl","title","className","source","uri","client","sanityClient","projectId","dataset","useCdn","apiVersion","builder","imageUrlBuilder","urlFor","image","Categories","useState","categories","setCategories","useEffect","fetch","then","data","ScrollView","contentContainerStyle","paddingHorizontal","paddingTop","horizontal","showsHorizontalScrollIndicator","map","category","width","url","name","_id","RestaurantCard","id","rating","genre","address","short_description","dishes","long","lat","navigation","useNavigation","onPress","navigate","color","opacity","size","FeaturedRow","description","restaurants","setRestaurants","View","restaurant","type","HomeScreen","featuredCategories","setFeaturedCategories","useLayoutEffect","setOptions","headerShown","TextInput","placeholder","keyboardType","paddingBottom","basketSlice","createSlice","initialState","items","reducers","addToBasket","state","action","payload","removeFromBasket","index","findIndex","item","newBasket","splice","console","warn","actions","selectBasketItems","basket","selectBasketTotal","reduce","total","price","DishRow","isPressed","setIsPressed","useSelector","filter","selectBasketItemsWithId","dispatch","useDispatch","quantity","currency","style","borderWidth","borderColor","TouchableOpacity","disabled","length","Text","BasketIcon","basketTotal","restaurantSlice","setRestaurant","selectRestaurant","RestaurantScreen","useRoute","params","goBack","dish","store","configureStore","reducer","basketReducer","restaurantReducer","BasketScreen","groupedItemsInBasket","setGroupedItemsInBasket","groupedItems","results","push","height","Object","entries","key","PreparingOrderScreen","setTimeout","require","animation","iterationCount","indeterminate","DeliveryScreen","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","component","options","presentation","module","exports"],"mappings":"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","file":"static/js/app.4905d684.chunk.js","sourcesContent":["import { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport React from \"react\";\n\nconst CategoryCard = ({ imgUrl, title }) => {\n  return (\n    <TouchableOpacity className=\"relative mr-2\">\n      <Image\n        source={{\n          uri: imgUrl,\n        }}\n        className=\"h-20 w-20 rounded\"\n      />\n      <Text className=\"absolute bottom-1 left-1 text-white font-bold\">\n        {title}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default CategoryCard;","import sanityClient from \"@sanity/client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nconst client = sanityClient({\n  projectId: \"f47fxqtd\",\n  dataset: \"production\",\n  useCdn: true,\n  apiVersion: \"2021-10-21\",\n});\n\nconst builder = imageUrlBuilder(client);\nexport const urlFor = (source) => builder.image(source);\n\nexport default client;","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport CategoryCard from \"./CategoryCard\";\nimport sanityClient, { urlFor } from \"../sanity\";\n\nconst Categories = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `\n        *[_type == \"category\"]\n    `\n      )\n      .then((data) => {\n        setCategories(data);\n      });\n  }, []);\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        paddingHorizontal: 15,\n        paddingTop: 10,\n      }}\n      horizontal\n      showsHorizontalScrollIndicator={false}\n    >\n      {categories.map((category) => (\n        <CategoryCard\n          key={category._id}\n          imgUrl={urlFor(category.image).width(200).url()}\n          title={category.name}\n        />\n      ))}\n    </ScrollView>\n  );\n};\n\nexport default Categories;","import { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport React from \"react\";\nimport { StarIcon } from \"react-native-heroicons/solid\";\nimport { MapPinIcon } from \"react-native-heroicons/outline\";\nimport { urlFor } from \"../sanity\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst RestaurantCard = ({\n  id,\n  imgUrl,\n  title,\n  rating,\n  genre,\n  address,\n  short_description,\n  dishes,\n  long,\n  lat,\n}) => {\n  const navigation = useNavigation();\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Restaurant\", {\n          id,\n          imgUrl,\n          title,\n          rating,\n          genre,\n          address,\n          short_description,\n          dishes,\n          long,\n          lat,\n        });\n      }}\n      className=\"bg-white mr-3 shadow\"\n    >\n      <Image\n        source={{\n          uri: urlFor(imgUrl).url(),\n        }}\n        className=\"h-36 w-64 rounded-sm\"\n      />\n\n      <View className=\"px-3 pb-4\">\n        <Text className=\"font-bold text-lg pt-2\">{title}</Text>\n        <View className=\"flex-row items-center space-x-1\">\n          <StarIcon color=\"green\" opacity={0.5} size={22} />\n          <Text className=\"text-xs text-gray-500\">\n            <Text className=\"text-green-500\">{rating}</Text> · {genre}\n          </Text>\n        </View>\n\n        <View className=\"flex-row items-center space-x-1\">\n          <MapPinIcon color=\"gray\" opacity={0.4} size={22} />\n          <Text className=\"text-xs text-gray-500\">Nearby · {address}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default RestaurantCard;","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { ArrowRightIcon } from \"react-native-heroicons/outline\";\nimport RestaurantCard from \"./RestaurantCard\";\nimport sanityClient from \"../sanity\";\n\nconst FeaturedRow = ({ id, title, description }) => {\n  const [restaurants, setRestaurants] = useState([]);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `\n        *[_type == \"featured\" && _id == $id] {\n            ...,\n           restaurants[]->{\n             ...,\n             dishes[]->,\n             type-> {\n                name\n             }\n           },\n          }[0]\n        `,\n        { id }\n      )\n      .then((data) => {\n        setRestaurants(data?.restaurants);\n      });\n  }, [id]);\n\n  return (\n    <View>\n      <View className=\"mt-4 flex-row items-center justify-between px-4\">\n        <Text className=\"font-bold text-lg\">{title}</Text>\n        <ArrowRightIcon color=\"#00CCBB\" />\n      </View>\n\n      <Text className=\"text-xs text-gray-500 px-4\">{description}</Text>\n\n      <ScrollView\n        horizontal\n        contentContainerStyle={{\n          paddingHorizontal: 15,\n        }}\n        showsHorizontalScrollIndicator={false}\n        className=\"pt-4\"\n      >\n        {restaurants?.map((restaurant) => (\n          <RestaurantCard\n            key={restaurant._id}\n            id={restaurant._id}\n            imgUrl={restaurant.image}\n            address={restaurant.address}\n            title={restaurant.name}\n            dishes={restaurant.dishes}\n            rating={restaurant.rating}\n            short_description={restaurant.short_description}\n            genre={restaurant.type?.name}\n            long={restaurant.long}\n            lat={restaurant.lat}\n          />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default FeaturedRow;","import {\n    View,\n    Text,\n    SafeAreaView,\n    Image,\n    TextInput,\n    ScrollView,\n  } from \"react-native\";\n  import React, { useEffect, useLayoutEffect, useState } from \"react\";\n  import { useNavigation } from \"@react-navigation/native\";\n  import {\n    UserIcon,\n    ChevronDownIcon,\n    MagnifyingGlassIcon,\n    AdjustmentsVerticalIcon,\n  } from \"react-native-heroicons/outline\";\n  import Categories from \"../components/Categories\";\n  import FeaturedRow from \"../components/FeaturedRow\";\n  import sanityClient from \"../sanity\";\n\nconst HomeScreen = () => {\n    const navigation = useNavigation();\n    const [featuredCategories, setFeaturedCategories] = useState([]);\n    useLayoutEffect(() => {\n        navigation.setOptions({\n          headerShown: false,\n        });\n      }, []);\n\n      useEffect(() => {\n        sanityClient\n          .fetch(\n            `\n                *[_type == \"featured\"] {\n                    ...,\n                restaurants[]->{\n                    ...,\n                    dishes[]->\n                }\n                }\n            `\n          )\n          .then((data) => {\n            setFeaturedCategories(data);\n          });\n      }, []);\n    \n    return (\n        <SafeAreaView className=\"bg-white pt-5\">\n        {/* Header */}\n        <View className=\"flex-row pb-3 items-center mx-4 space-x-2\">\n          <Image\n            source={{\n              uri: \"https://links.papareact.com/wru\",\n            }}\n            className=\"h-7 w-7 bg-gray-300 p-4 rounded-full\"/>\n  \n          <View className=\"flex-1\">\n            <Text className=\"font-bold text-gray-400 text-xs\">Deliver Now!</Text>\n            <Text className=\"font-bold text-xl\">\n              Current Location\n              <ChevronDownIcon size={20} color=\"#00CCBB\" />\n            </Text>\n          </View>\n          <UserIcon size={35} color=\"#00CCBB\" />\n        </View>\n         {/* Search */}\n         <View className=\"flex-row items-center space-x-2 pb-2 mx-4\">\n         <View className=\"flex-row flex-1 space-x-2 bg-gray-200 p-3\">\n         <MagnifyingGlassIcon color=\"gray\" size={20}/>\n         <TextInput\n            placeholder=\"Restaurants and cuisines\"\n            keyboardType=\"default\"\n          />\n         </View>\n         <AdjustmentsVerticalIcon color=\"#00CCBB\" />\n         </View>\n          {/* Body */}\n      <ScrollView\n        className=\"bg-gray-100\"\n        contentContainerStyle={{\n          paddingBottom: 100,\n        }}>\n           {/* Categories */}\n        <Categories />\n        {/* Featured */}\n        {featuredCategories?.map((category) => (\n          <FeaturedRow\n            key={category._id}\n            id={category._id}\n            title={category.name}\n            description={category.short_description}\n          />\n        ))}\n          </ScrollView>\n       </SafeAreaView>\n    );\n  };\nexport default HomeScreen;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n};\n\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      state.items = [...state.items, action.payload];\n    },\n    removeFromBasket: (state, action) => {\n      const index = state.items.findIndex(\n        (item) => item.id === action.payload.id\n      );\n\n      let newBasket = [...state.items];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.payload.id}) as its not in basket!`\n        );\n      }\n\n      state.items = newBasket;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addToBasket, removeFromBasket } = basketSlice.actions;\n\nexport const selectBasketItems = (state) => state.basket.items;\n\nexport const selectBasketItemsWithId = (state, id) =>\n  state.basket.items.filter((item) => item.id === id);\n\nexport const selectBasketTotal = (state) =>\n  state.basket.items.reduce((total, item) => (total += item.price), 0);\n\nexport default basketSlice.reducer;","import { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport Currency from \"react-currency-formatter\";\nimport React, { useState } from \"react\";\nimport { urlFor } from \"../sanity\";\nimport { MinusCircleIcon, PlusCircleIcon } from \"react-native-heroicons/solid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addToBasket,\n  removeFromBasket,\n  selectBasketItems,\n  selectBasketItemsWithId,\n} from \"../features/basketSlice\";\n\nconst DishRow = ({ id, name, description, price, image }) => {\n  const [isPressed, setIsPressed] = useState(false);\n  const items = useSelector((state) => selectBasketItemsWithId(state, id));\n  const dispatch = useDispatch();\n\n  const addItemToBasket = () => {\n    dispatch(addToBasket({ id, name, description, price, image }));\n  };\n\n  const removeItemFromBasket = () => {\n    if (!items.length > 0) return;\n\n    dispatch(removeFromBasket({ id }));\n  };\n\n  return (\n    <>\n      <TouchableOpacity\n        onPress={() => setIsPressed(!isPressed)}\n        className={`bg-white border p-4 border-gray-200 ${\n          isPressed && \"border-b-0\"\n        }`}\n      >\n        <View className=\"flex-row\">\n          <View className=\"flex-1 pr-2\">\n            <Text className=\"text-lg mb-1\">{name}</Text>\n            <Text className=\"text-gray-400\">{description}</Text>\n            <Text className=\"text-gray-400 mt-2\">\n              <Currency quantity={price} currency=\"SGD\" />\n            </Text>\n          </View>\n\n          <View>\n            <Image\n              style={{\n                borderWidth: 1,\n                borderColor: \"#F3F3F4\",\n              }}\n              source={{ uri: urlFor(image).url() }}\n              className=\"h-20 w-20 bg-gray-300 p-4\"\n            />\n          </View>\n        </View>\n      </TouchableOpacity>\n\n      {isPressed && (\n        <View className=\"bg-white px-4\">\n          <View className=\"flex-row items-center space-x-2 pb-3\">\n            <TouchableOpacity\n              disabled={!items.length}\n              onPress={removeItemFromBasket}\n            >\n              <MinusCircleIcon\n                color={items.length > 0 ? \"#00CCBB\" : \"gray\"}\n                size={40}\n              />\n            </TouchableOpacity>\n\n            <Text>{items.length}</Text>\n\n            <TouchableOpacity onPress={addItemToBasket}>\n              <PlusCircleIcon color=\"#00CCBB\" size={40} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default DishRow;","import { View, Text, TouchableOpacity } from \"react-native\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectBasketItems, selectBasketTotal } from \"../features/basketSlice\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Currency from \"react-currency-formatter\";\n\nconst BasketIcon = () => {\n  const items = useSelector(selectBasketItems);\n  const navigation = useNavigation();\n  const basketTotal = useSelector(selectBasketTotal);\n\n  if (items.length === 0) return null;\n\n  return (\n    <View className=\"absolute bottom-10 w-full z-50\">\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"Basket\")}\n        className=\"mx-5 bg-[#00CCBB] p-4 rounded-lg flex-row items-center space-x-1\"\n      >\n        <Text className=\"text-white font-extrabold text-lg bg-[#01A296] py-1 px-2\">\n          {items.length}\n        </Text>\n        <Text className=\"flex-1 text-white font-extrabold text-lg text-center\">\n          View Basket\n        </Text>\n        <Text className=\"text-lg text-white font-extrabold\">\n          <Currency quantity={basketTotal} currency=\"SGD\" />\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default BasketIcon;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  restaurant: {\n    id: null,\n    imgUrl: null,\n    title: null,\n    rating: null,\n    genre: null,\n    address: null,\n    short_description: null,\n    dishes: null,\n  },\n};\n\nexport const restaurantSlice = createSlice({\n  name: \"restaurant\",\n  initialState,\n  reducers: {\n    setRestaurant: (state, action) => {\n      state.restaurant = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setRestaurant } = restaurantSlice.actions;\n\nexport const selectRestaurant = (state) => state.restaurant.restaurant;\n\nexport default restaurantSlice.reducer;","import { View, Text, ScrollView, Image, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useLayoutEffect } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { urlFor } from \"../sanity\";\nimport {\n  ArrowLeftIcon,\n  ChevronRightIcon,\n  MapPinIcon,\n  StarIcon,\n} from \"react-native-heroicons/solid\";\nimport { QuestionMarkCircleIcon } from \"react-native-heroicons/outline\";\nimport DishRow from \"../components/DishRow\";\nimport BasketIcon from \"../components/BasketIcon\";\nimport { useDispatch } from \"react-redux\";\nimport { setRestaurant } from \"../features/restaurantSlice\";\n\nconst RestaurantScreen = () => {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const {\n    params: {\n      id,\n      imgUrl,\n      title,\n      rating,\n      genre,\n      address,\n      short_description,\n      dishes,\n      long,\n      lat,\n    },\n  } = useRoute();\n\n  useEffect(() => {\n    dispatch(\n      setRestaurant({\n        id,\n        imgUrl,\n        title,\n        rating,\n        genre,\n        address,\n        short_description,\n        dishes,\n        long,\n        lat,\n      })\n    );\n  }, []);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, []);\n\n  return (\n    <>\n      <BasketIcon />\n\n      <ScrollView>\n        <View className=\"relative\">\n          <Image\n            source={{\n              uri: urlFor(imgUrl).url(),\n            }}\n            className=\"w-full h-56 bg-gray-300 p-4\"\n          />\n          <TouchableOpacity\n            onPress={navigation.goBack}\n            className=\"absolute top-14 left-5 p-2 bg-gray-100 rounded-full\"\n          >\n            <ArrowLeftIcon size={20} color=\"#00CCBB\" />\n          </TouchableOpacity>\n        </View>\n\n        <View className=\"bg-white\">\n          <View className=\"px-4 pt-4\">\n            <Text className=\"text-3xl font-bold\">{title}</Text>\n            <View className=\"flex-row space-x-2 my-1\">\n              <View className=\"flex-row items-center space-x-1\">\n                <StarIcon color=\"green\" opacity={0.5} size={22} />\n                <Text className=\"text-xs text-gray-500\">\n                  <Text className=\"text-green-500\">{rating}</Text> · {genre}\n                </Text>\n              </View>\n\n              <View className=\"flex-row items-center space-x-1\">\n                <MapPinIcon color=\"gray\" opacity={0.4} size={22} />\n                <Text className=\"text-xs text-gray-500\">\n                  Nearby · {address}\n                </Text>\n              </View>\n            </View>\n\n            <Text className=\"text-gray-500 mt-2 pb-4\">{short_description}</Text>\n          </View>\n\n          <TouchableOpacity className=\"flex-row items-center space-x-2 p-4 border-y border-gray-300\">\n            <QuestionMarkCircleIcon color=\"gray\" opacity={0.6} size={20} />\n            <Text className=\"pl-2 flex-1 text-md font-bold\">\n              Have a food allergy?\n            </Text>\n            <ChevronRightIcon color=\"#00CCBB\" />\n          </TouchableOpacity>\n        </View>\n\n        <View className=\"pb-36\">\n          <Text className=\"px-4 pt-6 mb-3 font-bold text-xl\">Menu</Text>\n\n          {dishes.map((dish) => (\n            <DishRow\n              key={dish._id}\n              id={dish._id}\n              name={dish.name}\n              description={dish.short_description}\n              price={dish.price}\n              image={dish.image}\n            />\n          ))}\n        </View>\n      </ScrollView>\n    </>\n  );\n};\n\nexport default RestaurantScreen;","import { configureStore } from \"@reduxjs/toolkit\";\nimport basketReducer from \"./features/basketSlice\";\nimport restaurantReducer from \"./features/restaurantSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    basket: basketReducer,\n    restaurant: restaurantReducer,\n  },\n});","import {\n    View,\n    Text,\n    SafeAreaView,\n    TouchableOpacity,\n    Image,\n    ScrollView,\n  } from \"react-native\";\n  import React, { useMemo, useState } from \"react\";\n  import { useNavigation } from \"@react-navigation/native\";\n  import { selectRestaurant } from \"../features/restaurantSlice\";\n  import { useDispatch, useSelector } from \"react-redux\";\n  import {\n    removeFromBasket,\n    selectBasketItems,\n    selectBasketTotal,\n  } from \"../features/basketSlice\";\n  import { useEffect } from \"react\";\n  import { XCircleIcon } from \"react-native-heroicons/solid\";\n  import { urlFor } from \"../sanity\";\n  import Currency from \"react-currency-formatter\";\n  \n  const BasketScreen = () => {\n    const navigation = useNavigation();\n    const restaurant = useSelector(selectRestaurant);\n    const items = useSelector(selectBasketItems);\n    const basketTotal = useSelector(selectBasketTotal);\n    const [groupedItemsInBasket, setGroupedItemsInBasket] = useState([]);\n    const dispatch = useDispatch();\n  \n    useEffect(() => {\n      const groupedItems = items.reduce((results, item) => {\n        (results[item.id] = results[item.id] || []).push(item);\n        return results;\n      }, {});\n  \n      setGroupedItemsInBasket(groupedItems);\n    }, [items]);\n  \n    return (\n      <SafeAreaView className=\"flex-1 bg-white\">\n        <View className=\"flex-1 bg-gray-100\">\n          <View className=\"p-5 border-b border-[#00CCBB] bg-white shadow-xs\">\n            <View>\n              <Text className=\"text-lg font-bold text-center\">Basket</Text>\n              <Text className=\"text-center text-gray-400\">\n                {restaurant.title}\n              </Text>\n            </View>\n  \n            <TouchableOpacity\n              onPress={navigation.goBack}\n              className=\"rounded-full bg-gray-100  absolute top-3 right-5\"\n            >\n              <XCircleIcon color=\"#00CCBB\" height={50} width={50} />\n            </TouchableOpacity>\n          </View>\n  \n          <View className=\"flex-row items-center space-x-4 px-4 py-3 bg-white my-5\">\n            <Image\n              source={{\n                uri: \"https://links.papareact.com/wru\",\n              }}\n              className=\"h-7 w-7 bg-gray-300 p-4 rounded-full\"\n            />\n            <Text className=\"flex-1\">Deliver in 50-75 min</Text>\n            <TouchableOpacity>\n              <Text className=\"text-[#00CCBB]\">Change</Text>\n            </TouchableOpacity>\n          </View>\n  \n          <ScrollView className=\"divide-y divide-gray-200\">\n            {Object.entries(groupedItemsInBasket).map(([key, items]) => (\n              <View\n                key={key}\n                className=\"flex-row items-center space-x-3 bg-white py-2 px-5\"\n              >\n                <Text className=\"text-[#00CCBB]\">{items.length} x</Text>\n                <Image\n                  source={{ uri: urlFor(items[0]?.image).url() }}\n                  className=\"h-12 w-12 rounded-full\"\n                />\n                <Text className=\"flex-1\">{items[0]?.name}</Text>\n  \n                <Text className=\"text-gray-600\">\n                  <Currency quantity={items[0]?.price} currency=\"SGD\" />\n                </Text>\n  \n                <TouchableOpacity>\n                  <Text\n                    className=\"text-[#00CCBB] text-xs\"\n                    onPress={() => dispatch(removeFromBasket({ id: key }))}\n                  >\n                    Remove\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            ))}\n          </ScrollView>\n  \n          <View className=\"p-5 bg-white mt-5 space-y-4\">\n            <View className=\"flex-row justify-between\">\n              <Text className=\"text-gray-400\">Subtotal</Text>\n              <Text className=\"text-gray-400\">\n                <Currency quantity={basketTotal} currency=\"SGD\" />\n              </Text>\n            </View>\n  \n            <View className=\"flex-row justify-between\">\n              <Text className=\"text-gray-400\">Delivery Fee</Text>\n              <Text className=\"text-gray-400\">\n                <Currency quantity={5.99} currency=\"SGD\" />\n              </Text>\n            </View>\n  \n            <View className=\"flex-row justify-between\">\n              <Text>Order Total</Text>\n              <Text className=\"font-extrabold\">\n                <Currency quantity={basketTotal + 5.99} currency=\"SGD\" />\n              </Text>\n            </View>\n  \n            <TouchableOpacity\n              onPress={() => navigation.navigate(\"PreparingOrderScreen\")}\n              className=\"rounded-lg bg-[#00CCBB] p-4\"\n            >\n              <Text className=\"text-center text-white text-lg font-bold\">\n                Place Order\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView>\n    );\n  };\n  \n  export default BasketScreen;","import { View, Text, SafeAreaView } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport * as Animatable from \"react-native-animatable\";\nimport * as Progress from \"react-native-progress\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst PreparingOrderScreen = () => {\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    setTimeout(() => {\n      navigation.navigate(\"Delivery\");\n    }, 4000);\n  }, []);\n\n  return (\n    <SafeAreaView className=\"bg-[#00CCBB] flex-1 justify-center items-center\">\n      <Animatable.Image\n        source={require(\"../assets/orderLoading.gif\")}\n        animation=\"slideInUp\"\n        iterationCount={1}\n        className=\"h-96 w-96\"\n      />\n\n      <Animatable.Text\n        animation=\"slideInUp\"\n        iterationCount={1}\n        className=\"text-lg my-10 text-white font-bold text-center\"\n      >\n        Waiting for Restaurant to accept your order!\n      </Animatable.Text>\n\n      <Progress.Circle size={60} indeterminate={true} color=\"white\" />\n    </SafeAreaView>\n  );\n};\n\nexport default PreparingOrderScreen;","import {\n    View,\n    Text,\n    SafeAreaView,\n    TouchableOpacity,\n    Image,\n  } from \"react-native\";\n  import React from \"react\";\n  import { useNavigation } from \"@react-navigation/native\";\n  import { useSelector } from \"react-redux\";\n  import { selectRestaurant } from \"../features/restaurantSlice\";\n  import { XMarkIcon } from \"react-native-heroicons/solid\";\n  import * as Progress from \"react-native-progress\";\n\n  \n  const DeliveryScreen = () => {\n    const navigation = useNavigation();\n    const restaurant = useSelector(selectRestaurant);\n  \n    return (\n      <View className=\"bg-[#00CCBB] flex-1\">\n        <SafeAreaView className=\"z-50\">\n          <View className=\"flex-row justify-between items-center p-5\">\n            <TouchableOpacity onPress={() => navigation.navigate(\"Home\")}>\n              <XMarkIcon color=\"white\" size={30} />\n            </TouchableOpacity>\n            <Text className=\"font-light text-white text-lg\">Order Help</Text>\n          </View>\n  \n          <View className=\"bg-white mx-5 my-2 rounded-md p-6 z-50 shadow-md\">\n            <View className=\"flex-row justify-between\">\n              <View>\n                <Text className=\"text-lg text-gray-400\">Estimated Arrival</Text>\n                <Text className=\"text-4xl font-bold\">45-55 Minutes</Text>\n              </View>\n              <Image\n                source={{\n                  uri: \"https://links.papareact.com/fls\",\n                }}\n                className=\"h-20 w-20\"\n              />\n            </View>\n  \n            <Progress.Bar size={30} color=\"#00CCBB\" indeterminate={true} />\n  \n            <Text className=\"mt-3 text-gray-500\">\n              Your order at {restaurant.title} is being prepared\n            </Text>\n          </View>\n        </SafeAreaView>\n  \n       \n  \n        <SafeAreaView className=\"bg-white flex-row items-center space-x-5 h-28\">\n          <Image\n            source={{\n              uri: \"https://links.papareact.com/wru\",\n            }}\n            className=\"h-12 w-12 bg-gray-300 p-4 rounded-full ml-5\"\n          />\n          <View className=\"flex-1\">\n            <Text className=\"text-lg\">Jeremy Ang</Text>\n            <Text className=\"text-gray-400\">Your Rider</Text>\n          </View>\n  \n          <Text className=\"text-[#00CCBB] text-lg mr-5 font-bold\">Call</Text>\n        </SafeAreaView>\n      </View>\n    );\n  };\n  \n  export default DeliveryScreen;","import { StatusBar } from 'expo-status-bar';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from './screens/HomeScreen'\nimport RestaurantScreen from \"./screens/RestaurantScreen\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport BasketScreen from \"./screens/BasketScreen\";\nimport PreparingOrderScreen from \"./screens/PreparingOrderScreen\";\nimport DeliveryScreen from \"./screens/DeliveryScreen\";\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n       <Provider store={store}>\n      <Stack.Navigator>\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n            <Stack.Screen name=\"Restaurant\" component={RestaurantScreen} />\n            <Stack.Screen\n              name=\"Basket\"\n              component={BasketScreen}\n              options={{ presentation: \"modal\", headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"PreparingOrderScreen\"\n              component={PreparingOrderScreen}\n              options={{ presentation: \"fullScreenModal\", headerShown: false }} />\n              <Stack.Screen\n              name=\"Delivery\"\n              component={DeliveryScreen}\n              options={{ presentation: \"fullScreenModal\", headerShown: false }}\n            />\n      </Stack.Navigator>\n      </Provider>\n    </NavigationContainer>\n  );\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/orderLoading.749e41c9.gif\";"],"sourceRoot":""}